local player = game.Players.LocalPlayer

-- Function to delete ApplyFallDamage from the direct path
local function deleteApplyFallDamage()
    -- Construct the direct path to the ApplyFallDamage value
    local characterHandler = game.Workspace:FindFirstChild("Live"):FindFirstChild(player.Name):FindFirstChild("CharacterHandler")
    
    if characterHandler then
        local remotes = characterHandler:FindFirstChild("Remotes")
        
        if remotes then
            local applyFallDamage = remotes:FindFirstChild("ApplyFallDamage")
            
            if applyFallDamage then
                applyFallDamage:Destroy() -- Deletes the ApplyFallDamage value
                print("ApplyFallDamage value deleted for " .. player.Name)
            else
                print("ApplyFallDamage value not found in Remotes for " .. player.Name)
            end
        else
            print("Remotes not found in CharacterHandler for " .. player.Name)
        end
    else
        print("CharacterHandler not found for " .. player.Name)
    end
end

-- Call the function to delete ApplyFallDamage when the script runs
deleteApplyFallDamage()

local infiniteJumpPower = 130
local fallSpeedMultiplier = 105 -- Adjust this value to change fall speed

local function handleJump()
    if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        
        humanoid.JumpPower = infiniteJumpPower
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end

local function enableFastFall()
    if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        
        -- Set the gravity to a higher value for faster falling
        humanoid.PlatformStand = true -- Prevents player from being pushed around
        local originalGravity = workspace.Gravity
        workspace.Gravity = originalGravity * fallSpeedMultiplier -- Increase gravity

        -- Reset gravity back to normal after a short delay
        wait(0.1)
        workspace.Gravity = originalGravity
        humanoid.PlatformStand = false -- Allow player to move again
    end
end

local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(input, isProcessed)
    if not isProcessed and input.KeyCode == Enum.KeyCode.Space then
        while UserInputService:IsKeyDown(Enum.KeyCode.Space) do
            handleJump()
            wait(0.1) -- Adjust the wait time if needed
        end
        enableFastFall() -- Call enableFastFall when space is released
    end
end)

local funny
funny = hookmetamethod(game, '__namecall', function(b, ...)
    if not checkcaller() and getnamecallmethod() == 'FireServer' and tostring(b) == 'RemoteEvent' then
        return
    end
    return funny(b, ...)
end)
